package de.tomcory.heimdall.ui.telemetry

import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import de.tomcory.heimdall.persistence.database.HeimdallDatabase
import de.tomcory.heimdall.persistence.database.entity.App as EntityApp
import de.tomcory.heimdall.persistence.database.entity.Request as EntityRequest
import de.tomcory.heimdall.persistence.database.entity.Response as EntityResponse
import de.tomcory.heimdall.persistence.database.entity.Connection as EntityConnection
import kotlinx.coroutines.launch



class TelemetryViewModel : ViewModel() {

    private val db: HeimdallDatabase? = HeimdallDatabase.instance


    fun createFakeData() {
        viewModelScope.launch {
            val currentTime = System.currentTimeMillis()

            val fakeRequest = EntityRequest(
                    id = 0, // Assuming ID is autogenerated
                    timestamp = currentTime,
                    reqResId = 101,
                    headers = "User-Agent: VungleDroid/6.10.4;max/6.10.4.0, Vungle-Version: 5.10.0, Content-Type: application/json, Host: api.vungle.com, Connection: Keep-Alive, Accept-Encoding: gzip, content-length: 1419",
                    content = """{"email":"heimdallsnet03@gmail.com","dataFields":{"connect_sleep_api":false,"has_sleep_data":false,"app_lang":"en","device_type":"phone","days_old":4,"first_open_s":"1668074953","time_of_day":21,"paid":false,"days_tracker":0,"loop_mode":"6","goals":"[\"none\"]","groups":"[\"none\"]","topics":"[\"none\"]","has_reviewed_app":false,"how_did_you_hear":"none","tracker_nights_count":0,"microphone_enabled":true,"user_status":"free","first_version":"20.21.1","market":"google","notif_enabled":true,"com_perm":false,"subscribed":false,"account_signin_type":"email","is_logged_in":true,"is_confirmed":false,"experiments":[{"name":"ab_paywall","variant":"free_trial_60_vs_40_usd_de"},{"name":"ab_features_ab_test_path","variant":"limit_40_free_sounds"},{"name":"ab_user_props_settled","variant":"on"},{"name":"ab_home_config","variant":"and_home_first7days"},{"name":"ab_journal_config","variant":"and_demodatasleepphase_variantc"},{"name":"ab_home_config_slot_testSlot","variant":"testslotdefault"},{"name":"ab_home_config_slot_lastchancepromo","variant":"lastchancepromodefault"},{"name":"ab_home_config_slot_pageCarouselFree","variant":"pagecarouselfreedefault"},{"name":"ab_home_config_slot_shortcutComponent","variant":"shortcutcomponentdefault"},{"name":"ab_home_config_slot_timeOfDayCaroussel","variant":"timeofdaycaroussel_default"},{"name":"ab_rapid_onboarding_steps","variant":"and_default123"},{"name":"ab_show_legals_checkboxes","variant":"on"},{"name":"ab_tab_bar_config","variant":"and_recordericon_varb"},{"name":"ab_landing_page","variant":"home"},{"name":"ab_days_to_unlock_sleep_score","variant":"2"},{"name":"ab_number_sleep_journal_dismiss_before_dialog_prompt","variant":"0"},{"name":"ab_review_active_days_until_prompt","variant":"2"},{"name":"ab_variantBanner","variant":"soundtruebedtimefalsemeditationfalsemovetruemorefalsehometrue"},{"name":"ab_sleep_recorder_timer_length","variant":"30"}],"favorite_count":0},"mergeNestedObjects":false,"createdAt":1668456032}""",
                    contentLength = 15,
                    method = "GET",
                    remoteHost = "example.com",
                    remotePath = "/api/data",
                    remoteIp = "192.168.1.1",
                    remotePort = 8080,
                    localIp = "10.0.0.1",
                    localPort = 8081,
                    initiatorId = 200,
                    initiatorPkg = "com.example.app",
                    isTracker = false
            )


            val fakeResponse = EntityResponse(
                    id = 0, // Assuming ID is autogenerated
                    timestamp = currentTime,
                    reqResId = 101,
                    headers = "Content-Type: application/json",
                    content = "{\"response\":\"success\"}",
                    contentLength = 20,
                    statusCode = 200,
                    statusMsg = "OK",
                    remoteHost = "example.com",
                    remoteIp = "192.168.1.1",
                    remotePort = 8080,
                    localIp = "10.0.0.1",
                    localPort = 8081,
                    initiatorId = 200,
                    initiatorPkg = "com.example.app",
                    isTracker = false
            )

            val fakeApp = EntityApp(
                    packageName = "com.example.fakeapp123",
                    label = "Fake App",
                    versionName = "1.0.0",
                    versionCode = 1,
                    isInstalled = true,
                    isSystem = false,
                    flags = 0
                    // Assume icon is handled elsewhere as it's marked with @Ignore
            )

            val fakeConnection = EntityConnection(
                    id = 0L, // Auto-incremented ID, 0 as placeholder
                    protocol = "HTTP",
                    initialTimestamp = System.currentTimeMillis(),
                    initiatorId = 123,
                    initiatorPkg = "com.example.fakeapp123",
                    localPort = 8080,
                    remoteHost = "example.com",
                    remoteIp = "93.184.216.34",
                    remotePort = 80,
                    isTracker = false,
                    bytesOut = 1024L,
                    bytesIn = 2048L,
            )

            db?.requestDao?.insert(fakeRequest)
            db?.responseDao?.insert(fakeResponse)


            db?.connectionDao?.insert(fakeConnection)
//            db?.appDao?.insertApps(fakeApp)
        }
    }
}




